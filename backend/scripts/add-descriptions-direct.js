const { MongoClient } = require('mongodb');

// Configuration MongoDB
const MONGODB_URI = 'mongodb://localhost:27017/skillshub';

// Descriptions par d√©faut
const descriptions = [
  "Une communaut√© dynamique o√π les membres partagent leurs connaissances et exp√©riences.",
  "Rejoignez-nous pour apprendre, partager et grandir ensemble dans un environnement bienveillant.",
  "Espace d'√©change et de collaboration pour tous les passionn√©s de notre domaine.",
  "Communaut√© active d√©di√©e au partage de comp√©tences et √† l'entraide mutuelle.",
  "Un lieu de rencontre virtuel pour √©changer, apprendre et d√©velopper ses comp√©tences.",
  "Communaut√© engag√©e dans le d√©veloppement personnel et professionnel de ses membres."
];

async function addDescriptions() {
  const client = new MongoClient(MONGODB_URI);
  
  try {
    console.log('üîó Connexion √† MongoDB...');
    await client.connect();
    console.log('‚úÖ Connect√© √† MongoDB');

    const db = client.db('skillshub');
    const collection = db.collection('communities');

    // R√©cup√©rer toutes les communaut√©s
    console.log('üîç R√©cup√©ration des communaut√©s...');
    const communities = await collection.find({}).toArray();
    console.log(`üìä Trouv√© ${communities.length} communaut√©s`);

    // Mettre √† jour chaque communaut√©
    let updatedCount = 0;
    for (const community of communities) {
      const randomDescription = descriptions[Math.floor(Math.random() * descriptions.length)];
      
      const result = await collection.updateOne(
        { _id: community._id },
        { 
          $set: { 
            description: randomDescription,
            updatedAt: new Date()
          } 
        }
      );

      if (result.modifiedCount > 0) {
        updatedCount++;
        console.log(`‚úÖ Mis √† jour: "${community.name}" -> "${randomDescription.substring(0, 50)}..."`);
      }
    }

    console.log(`üéâ Termin√© ! ${updatedCount} communaut√©s mises √† jour avec des descriptions.`);

    // V√©rifier le r√©sultat
    console.log('üîç V√©rification...');
    const updatedCommunities = await collection.find({}).toArray();
    console.log('Premi√®re communaut√© apr√®s mise √† jour:', {
      name: updatedCommunities[0].name,
      description: updatedCommunities[0].description
    });

  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await client.close();
    console.log('üîå D√©connect√© de MongoDB');
  }
}

// Ex√©cuter le script
addDescriptions()
  .then(() => {
    console.log('‚úÖ Script termin√© avec succ√®s');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå Erreur lors de l\'ex√©cution du script:', error);
    process.exit(1);
  });
